{"version":3,"sources":["actions/auth.js","logo.png","components/layouts/Header.js","components/common/PrivateRoute.js","components/accounts/Login.js","components/accounts/Register.js","components/Home.js","actions/estadosActions.js","components/Estados.js","actions/municipiosActions.js","components/Municipios.js","actions/categoriasActions.js","components/Categoria.js","actions/clientesActions.js","components/Cliente.js","actions/clientesDatosEntregaActions.js","components/DatosEntrega.js","App.js","reportWebVitals.js","reducers/auth.js","reducers/estadosReducers.js","reducers/municipiosReducers.js","reducers/categoriasReducers.js","reducers/clientesReducers.js","reducers/clientesDatosEntregasReducers.js","reducers/index.js","index.js","config/url.config.js"],"names":["REGISTER_SUCCESS","LOGIN_SUCCESS","LOGOUT_SUCCESS","REGISTER_FAIL","LOGIN_FAIL","urlbase","require","address","tokenConfig","getState","token","auth","accessToken","config","headers","Header","this","props","isAuthenticated","username","authLinks","Menu","fixed","inverted","Container","Item","as","header","Image","size","src","logo","style","marginRight","to","Dropdown","item","simple","text","Divider","href","onClick","logout","guestLinks","Component","connect","state","dispatch","getstate","type","component","rest","render","isLoading","Login","password","onSubmit","e","preventDefault","login","onChange","setState","target","name","value","Form","className","Button","color","body","JSON","stringify","axios","post","then","res","console","log","data","payload","catch","err","Register","email","password2","newuser","register","Home","GET_ESTADOS","ADD_ESTADO","EDIT_ESTADO","DELETE_ESTADO","getEstados","get","toast","error","response","Estados","React","useState","open","setOpen","id","setId","estados","useSelector","lista","clave","setClave","nombre","setNombre","mode","setMode","useDispatch","useEffect","remove","delete","success","deleteEstado","modolista","Table","celled","Row","HeaderCell","Body","map","Cell","activo","Icon","editar","Modal","onClose","onOpen","trigger","Content","image","Description","for","placeholder","Actions","registro","put","editEstado","GET_MUNICIPIOS","ADD_MUNICIPIO","EDIT_MUNICIPIO","DELETE_MUNICIPIO","getMunicipios","Municipios","municipios","estado","setEstado","nombreEstado","arr","filter","x","length","deleteMunicipio","estadoId","editMunicipio","GET_CATEGORIAS","ADD_CATEGORIA","EDIT_CATEGORIA","DELETE_CATEGORIA","getCategorias","Categoria","categorias","deleteCategoria","editCategoria","GET_CLIENTES","ADD_CLIENTE","EDIT_CLIENTE","DELETE_CLIENTE","SET_CLIENTE_MODE","SET_CLIENTE_ID","getClientes","setClienteID","newID","Clientes","history","useHistory","filtro","setFiltro","clientes","initClient","apellidos","razonSocial","rfc","calle","numeroExterior","referencia","colonia","localidad","cp","whatsapp","telefono","categoria","municipio","cliente","setCliente","deleteCliente","striped","includes","categoriaId","municipioId","push","addDomicilio","Grid","columns","divided","Column","editCliente","GET_CLIENTE_DATOS_ENTREGAS","ADD_CLIENTE_DATOS_ENTREGA","EDIT_CLIENTE_DATOS_ENTREGA","DELETE_CLIENTE_DATOS_ENTREGA","SET_CLIENTE_DATOS_ENTREGA_MODE","getDatosEntrega","DatosEntrega","idCliente","datosEntrega","datoInicial","coordenadas","datosEntregaDomicilio","asignacionRuta","datoEntrega","setDatoEntrega","subheader","regresar","nombreMunicipio","deleteDatosEntrega","clienteId","datosEntregaADomicilio","editDatosEntrega","App","marginTop","exact","path","Categorias","Segment","vertical","margin","padding","textAlign","List","horizontal","link","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","localStorage","getItem","role","member","combineReducers","action","setItem","removeItem","roles","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.70d846f4.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const  REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const  LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const  LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const  REGISTER_FAIL = 'REGISTER_FAIL'\r\nexport const  LOGIN_FAIL = 'LOGIN_FAIL'\r\n\r\nconst urlbase = require('../config/url.config').address\r\n\r\nexport const  login = (username, password) => dispatch => {\r\n    \r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n\r\n    // nextia    \r\n    // const body = JSON.stringify( {\r\n    //     \"user\":{\r\n    //         \"email\": \"prueba@nextia.mx\",\r\n    //         \"password\": \"PruebaNextia2021\"\r\n    //     }\r\n    // })\r\n    \r\n\r\n    const body = JSON.stringify({username, password})    \r\n\r\n    \r\n    //nextia\r\n    //axios.post( urlbase + 'auth/signin', body, config)\r\n    //axios.post( 'https://prueba-api.nextia.mx/api/v1/login', body, config)\r\n    \r\n    \r\n    axios.post( urlbase + 'auth/signin', body, config)\r\n    .then(res => {\r\n        console.log(res.data.accessToken)\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: { ...res.data, accessToken: res.data.accessToken}\r\n            //payload: res.data\r\n        })\r\n    })\r\n    .catch( err => {\r\n        console.log(err)\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    })\r\n\r\n}\r\n\r\n\r\nexport const register = ({username, password, email}) => dispatch => {\r\n    const config = {\r\n        headers: { 'Content-Type':'application/json'}\r\n    }\r\n\r\n\r\n    const body = JSON.stringify({username, email, password, 'roles': ['user', 'moderator']});\r\n\r\n    axios.post(urlbase +  'auth/signup', body, config)\r\n        .then(res => {\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({ \r\n                type: REGISTER_FAIL\r\n            })\r\n        })\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch, getstate) =>{\r\n    dispatch({ type: LOGOUT_SUCCESS})\r\n}\r\n\r\n\r\n\r\n//nextia\r\n/*\r\n\r\n\r\nexport const tokenConfig = getState =>{\r\n    const token = getState().auth.accessToken\r\n\r\n    const config = {\r\n        headers: {authorization: `${token}`}\r\n    }\r\n\r\n    return config\r\n}\r\n*/\r\n\r\nexport const tokenConfig = getState => {\r\n    const token = getState().auth.accessToken;\r\n\r\n    const config ={\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    if (token){\r\n        config.headers['x-access-token'] = token\r\n    }\r\n\r\n    return config\r\n}\r\n\r\n\r\n\r\nexport const tokenConfigMultipart = getState => {\r\n    const token = getState().auth.accessToken;\r\n\r\n    const config ={\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    }\r\n\r\n    if (token){\r\n        config.headers['x-access-token'] = token\r\n    }\r\n\r\n    return config\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.8e1fec4a.png\";","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../actions/auth'\r\nimport logo from '../../logo.png';\r\nimport {\r\n    Container,    \r\n    Dropdown,  \r\n    Image,    \r\n    Menu,    \r\n  } from 'semantic-ui-react'\r\n\r\n\r\nclass Header extends Component {\r\n    render () {\r\n        const { isAuthenticated, username } = this.props.auth\r\n\r\n        const authLinks = (\r\n\r\n            <Menu fixed='top' inverted>\r\n                <Container>\r\n                    <Menu.Item as='a' header>\r\n                        <Image size='small' src={logo} style={{ marginRight: '1.5em' }} />                        \r\n                    </Menu.Item>\r\n                    <Menu.Item as='a'><Link  to=\"/\">Home</Link></Menu.Item>\r\n                    <Menu.Item as='a'><Link  to=\"/clientes\">Clientes</Link></Menu.Item>\r\n\r\n\r\n                   \r\n                    \r\n                    <Dropdown item simple text='Catalogos'>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item>Estados <Link to=\"/estados\">Estados</Link></Dropdown.Item>\r\n                            <Dropdown.Item>Municipios<Link  to=\"/municipios\">Municipios</Link></Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item> Categorias <Link  to=\"/categorias\">Categorias</Link></Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Menu.Item as='a'><strong>{username ? `Usuario:  ${username}` : \"\"}</strong></Menu.Item>\r\n                    <Menu.Item as='a'> <a href=\"#\" onClick={this.props.logout }>Salir</a> </Menu.Item>\r\n                </Container>\r\n            </Menu>\r\n\r\n\r\n\r\n        )\r\n\r\n\r\n        const guestLinks = (\r\n           \r\n\r\n            <Menu fixed='top' inverted>\r\n            <Container>\r\n                <Menu.Item as='a' header>\r\n                    <Image size='small' src={logo} style={{ marginRight: '1.5em' }} />                    \r\n                    \r\n                </Menu.Item>\r\n                <Menu.Item as='a'><Link  to=\"/\">Home</Link></Menu.Item>\r\n                <Menu.Item as='a'><Link  to=\"/login\">Login</Link></Menu.Item>                \r\n                 \r\n            </Container>\r\n            </Menu>\r\n            \r\n        )\r\n\r\n\r\n\r\n        return (\r\n            <nav>\r\n                {isAuthenticated \r\n                    ? authLinks\r\n                    : guestLinks\r\n                }\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapState = state => ({ auth: state.auth })\r\n\r\nexport default connect(mapState, {logout}) (Header)\r\n","import React, { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst PrivateRoute = ({component: Component, auth, ...rest}) => (\r\n    <Route\r\n        {...rest}\r\n\r\n        render={props => {\r\n            if (auth.isLoading){\r\n\r\n                return <h2>Loading...</h2>\r\n\r\n            }else if (!auth.isAuthenticated){\r\n\r\n                return <Redirect to ='/login' />\r\n\r\n            }else{\r\n\r\n                return <Component {...props} />\r\n\r\n            }\r\n        }}\r\n    />\r\n)\r\n\r\n\r\nconst mapState =state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapState)(PrivateRoute);","import React, { Component } from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../actions/auth'\r\nimport {    \r\n    Form, Button        \r\n  } from 'semantic-ui-react'\r\n\r\n\r\n\r\nexport class Login extends Component {\r\n\r\n    state = {\r\n        username:'',\r\n        password:''\r\n    }\r\n\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault()\r\n        \r\n        const {username, password} = this.state\r\n        const {login } = this.props\r\n        \r\n        \r\n        login(username, password)\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value \r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated){\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n\r\n        const {username, password} = this.state\r\n\r\n        return(\r\n            <>\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>username</label>\r\n                        <input \r\n                            type = \"text\"\r\n                            className = \"form-control\"\r\n                            name = \"username\"\r\n                            onChange = {this.onChange}\r\n                            value = {username}\r\n                         />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input \r\n                            type = \"password\"\r\n                            className = \"form-control\"\r\n                            name = \"password\"\r\n                            onChange = {this.onChange}\r\n                            value = {password}\r\n                         />\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"form-group\">\r\n                     <Button inverted color='green' type=\"submit\">Login</Button>\r\n                    </div>\r\n\r\n                </Form>\r\n\r\n                <p> ¿No tienes cuenta?<Link to=\"/register\">Registrate...</Link> </p>\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapState = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\n\r\nexport default connect(mapState, {login}) (Login)","import React, { Component} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport  { connect } from 'react-redux'\r\nimport { register } from '../../actions/auth'\r\n\r\n\r\nexport class Register extends Component {\r\n    state = {\r\n        username:'',\r\n        email: '',\r\n        password: '',\r\n        password2:'',\r\n\r\n    }\r\n\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        const { username, email, password, password2} = this.state\r\n\r\n        if  (password !== password2){\r\n            console.log('el password no coinciden')\r\n        }else{\r\n            const newuser = {username, email, password  }\r\n            this.props.register(newuser)\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render (){\r\n\r\n        if (this.props.isAuthenticated){\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n\r\n        const { username, email, password, password2} = this.state \r\n\r\n        return(\r\n            <>\r\n\r\n                <h2>Register</h2>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>username</label>\r\n                        <input \r\n                            type = \"text\"\r\n                            className = \"form-control\"\r\n                            name = \"username\"\r\n                            onChange = {this.onChange}\r\n                            value = {username}\r\n                         />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>email</label>\r\n                        <input \r\n                            type = \"email\"\r\n                            className = \"form-control\"\r\n                            name = \"email\"\r\n                            onChange = {this.onChange}\r\n                            value = {email}\r\n                         />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input \r\n                            type = \"password\"\r\n                            className = \"form-control\"\r\n                            name = \"password\"\r\n                            onChange = {this.onChange}\r\n                            value = {password}\r\n                         />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Confirm Password</label>\r\n                        <input \r\n                            type = \"password\"\r\n                            className = \"form-control\"\r\n                            name = \"password2\"\r\n                            onChange = {this.onChange}\r\n                            value = {password2}\r\n                         />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" >\r\n                            Register\r\n                        </button>\r\n                    </div>\r\n                    <p>\r\n                        ¿Ya tienes una cuenta?<Link to=\"/login\">Entrar</Link>\r\n                    </p>\r\n                </form>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapState = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\n\r\nexport default connect(mapState, {register})(Register)","import React from 'react'\r\nimport logo from '../logo.png';\r\nimport {    \r\n    Image        \r\n  } from 'semantic-ui-react'\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <>\r\n        \r\n        <Image size='large' src={logo} style={{ marginRight: '1.5em' }} />  \r\n        \r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default Home\r\n\r\n \r\n","import axios from 'axios'\r\nimport { tokenConfig } from './auth'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const GET_ESTADOS ='GET_ESTADOS'\r\nexport const ADD_ESTADO ='ADD_ESTADO'\r\nexport const EDIT_ESTADO ='EDIT_ESTADO'\r\nexport const DELETE_ESTADO ='DELETE_ESTADO'\r\n\r\nconst urlbase = require('../config/url.config').address\r\n\r\nexport const getEstados = () => (dispatch, getState) => {\r\n\r\n    \r\n    axios.get(urlbase + 'estados/')\r\n        .then( res => {\r\n\r\n            dispatch({\r\n                type: GET_ESTADOS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n \r\n\r\n\r\n\r\nexport const addEstado = (registro) => (dispatch, getState) => {\r\n\r\n    axios.post(urlbase + 'estados/', registro, tokenConfig(getState))\r\n        .then (res => {\r\n\r\n            dispatch({\r\n                type: ADD_ESTADO,\r\n                payload: res.data\r\n            })\r\n\r\n            toast.success(\"El registro se agrego exitosamente\")\r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n        \r\n}\r\nexport const editEstado = (registro, id) => (dispatch, getState) => {    \r\n    axios.put(urlbase + `estados/${id}`, registro, tokenConfig(getState))\r\n        .then (res => {\r\n            \r\n            dispatch({\r\n                type: EDIT_ESTADO,\r\n                payload: res.data\r\n            })\r\n\r\n            toast.success(\"El registro se modifico exitosamente\")\r\n\r\n             \r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n\r\nexport const deleteEstado = (id) => (dispatch, getState) => {\r\n\r\n    \r\n    axios.delete(urlbase + `estados/${id}`,  tokenConfig(getState))    \r\n        .then( res => {\r\n            dispatch ({\r\n                type: DELETE_ESTADO,\r\n                payload: id\r\n            })\r\n\r\n            toast.success(\"El registro se elimino exitosamente\")\r\n\r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n\r\n \r\n","import React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getEstados, addEstado, editEstado, deleteEstado} from '../actions/estadosActions'\r\n\r\nimport { Table, Form, Button,  Modal, Icon } from 'semantic-ui-react'\r\n\r\nconst Estados = () => {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const [id, setId] = useState(null)\r\n\r\n    const estados  = useSelector(state => state.estados.lista)  \r\n\r\n    const [clave, setClave] = useState('')\r\n    const [nombre, setNombre] = useState('')     \r\n    const [mode, setMode] = useState('')\r\n\r\n\r\n\r\n    //dispatch\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {      \r\n      dispatch(getEstados())    \r\n    }, [])\r\n\r\n\r\n    const add = () =>{                \r\n        setMode('new')          \r\n\r\n        setId(null)\r\n        \r\n        setClave('')\r\n        setNombre('')\r\n    }\r\n\r\n    const editar = (item) => {\r\n        \r\n        setMode('edit')\r\n\r\n        \r\n        setId(item.id)        \r\n        setClave(item.clave)\r\n        setNombre(item.nombre)\r\n        \r\n        setOpen(true)\r\n    }\r\n\r\n    const remove = (item) => {\r\n        dispatch(deleteEstado(item.id))\r\n        dispatch(getEstados())        \r\n    }\r\n\r\n\r\n    const guardar = (e) => {\r\n        e.preventDefault()\r\n        \r\n        let data = {\r\n            clave: clave,\r\n            nombre: nombre\r\n        }\r\n                \r\n         \r\n        mode === 'new' \r\n            ? dispatch(addEstado(data))\r\n            : dispatch(editEstado(data, id))\r\n        \r\n         setMode('list')\r\n         setOpen(false)\r\n        \r\n    }\r\n\r\n\r\n\r\n    const modolista = (\r\n        <>\r\n        \r\n        <Table celled>\r\n        <Table.Header>\r\n        <Table.Row>\r\n            <Table.HeaderCell>Clave</Table.HeaderCell>\r\n            <Table.HeaderCell>Nombre</Table.HeaderCell>\r\n            <Table.HeaderCell>Status</Table.HeaderCell>\r\n            <Table.HeaderCell>operaciones</Table.HeaderCell>\r\n        </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n            {\r\n                estados                            \r\n                .map ((item) => (\r\n                    <Table.Row key={item.id}>\r\n                    <Table.Cell>{item.clave}</Table.Cell>\r\n                    <Table.Cell>{item.nombre}</Table.Cell>                    \r\n                    <Table.Cell> {\r\n                            item.activo\r\n                            ? (<td> Activo</td>)\r\n                            : (<td> Baja </td>)\r\n                        }</Table.Cell>\r\n                    \r\n                    <Table.Cell>                        \r\n                        \r\n                        <Icon name='edit' size='large' onClick={ () => editar(item)} />\r\n\r\n                        <Icon name='trash' size='large' onClick={ () => remove(item)} />\r\n\r\n                    </Table.Cell>\r\n\r\n                            \r\n                    </Table.Row>                                     \r\n                ))\r\n              }\r\n           \r\n        </Table.Body>\r\n    </Table>\r\n       \r\n\r\n        </>\r\n    )\r\n\r\n\r\n\r\n    return (\r\n    \r\n      \r\n      <>\r\n            \r\n            <h3>Estados</h3>            \r\n\r\n            { modolista }\r\n\r\n\r\n            <Modal\r\n                onClose={() => setOpen(false)}\r\n                onOpen={() => setOpen(true)}\r\n                open={open}\r\n                trigger={<Button inverted color='green' onClick={() => add() }>Agregar Registro</Button>}\r\n                >\r\n                <Modal.Header>Estados</Modal.Header>\r\n                <Modal.Content image>\r\n                    \r\n                    <Modal.Description>\r\n                   \r\n\r\n                        {\r\n                            mode == 'new'\r\n                            ? (<Modal.Header>Agregando nuevo registro</Modal.Header>)\r\n                            : (<Modal.Header>editando...</Modal.Header>)\r\n                        }\r\n \r\n                        <Form>\r\n\r\n                            <label for=\"start\">Clave </label><br />\r\n                            <input \r\n                                type=\"text\"\r\n                                placeholder=\"clave del estado\"\r\n                                name=\"clave\"\r\n                                value={clave}\r\n                                onChange={ e => setClave(e.target.value)}\r\n                            />\r\n                            <br/>\r\n\r\n                            <br/>\r\n                            <br/>\r\n\r\n                            <label for=\"start\">Nombre </label><br />\r\n                            <input \r\n                                type=\"text\"\r\n                                placeholder=\"nombre del estado\"\r\n                                name=\"nombre\"\r\n                                value={nombre}\r\n                                onChange={ e => setNombre(e.target.value)}\r\n                            />\r\n                            <br/>\r\n\r\n\r\n    \r\n                            </Form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n\r\n                    <Button color='green' onClick={ guardar }>Guardar</Button>\r\n\r\n                    <Button color='grey'onClick={() => setOpen(false)}>Cancelar</Button>\r\n                   \r\n                </Modal.Actions>\r\n                </Modal>\r\n\r\n            \r\n        </>  \r\n\r\n       \r\n     \r\n        \r\n        \r\n\r\n  \r\n    )\r\n};\r\n\r\n\r\nexport default Estados\r\n\r\n \r\n","import axios from 'axios'\r\nimport { tokenConfig } from './auth'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const GET_MUNICIPIOS ='GET_MUNICIPIOS'\r\nexport const ADD_MUNICIPIO ='ADD_MUNICIPIO'\r\nexport const EDIT_MUNICIPIO ='EDIT_MUNICIPIO'\r\nexport const DELETE_MUNICIPIO ='DELETE_MUNICIPIO'\r\n \r\n\r\nconst urlbase = require('../config/url.config').address\r\n\r\n\r\nexport const getMunicipios = () => (dispatch, getState) => {\r\n\r\n    \r\n    axios.get(urlbase + 'municipios/', tokenConfig(getState))\r\n        .then( res => {\r\n\r\n            dispatch({\r\n                type: GET_MUNICIPIOS,\r\n                payload: res.data\r\n            })\r\n            \r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n\r\nexport const addMunicipio = (registro) => (dispatch, getState) => {\r\n\r\n    axios.post(urlbase + 'municipios/', registro, tokenConfig(getState))\r\n        .then (res => {\r\n\r\n            dispatch({\r\n                type: ADD_MUNICIPIO,\r\n                payload: res.data\r\n            })\r\n\r\n            toast.success(\"El registro se agrego exitosamente\")\r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n        \r\n}\r\nexport const editMunicipio = (registro, id) => (dispatch, getState) => {    \r\n    axios.put(urlbase + `municipios/${id}`, registro, tokenConfig(getState))\r\n        .then (res => {\r\n            \r\n            dispatch({\r\n                type: EDIT_MUNICIPIO,\r\n                payload: res.data\r\n            })\r\n\r\n            toast.success(\"El registro se modifico exitosamente\")\r\n\r\n             \r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n\r\nexport const deleteMunicipio = (id) => (dispatch, getState) => {\r\n\r\n    \r\n    axios.delete(urlbase + `municipios/${id}`,  tokenConfig(getState))    \r\n        .then( res => {\r\n            dispatch ({\r\n                type: DELETE_MUNICIPIO,\r\n                payload: id\r\n            })\r\n\r\n            toast.success(\"El registro se elimino exitosamente\")\r\n\r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n\r\n \r\n","import React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getEstados} from '../actions/estadosActions'\r\n\r\nimport {getMunicipios, addMunicipio,deleteMunicipio, editMunicipio } from '../actions/municipiosActions'\r\n\r\nimport { Table, Form, Button,  Modal ,Icon} from 'semantic-ui-react'\r\n\r\nconst Municipios = () => {\r\n\r\n\r\n   const [open, setOpen] = React.useState(false)\r\n\r\n\r\n    //useStates\r\n    const [id, setId] = useState(null)\r\n\r\n    const estados  = useSelector(state => state.estados.lista)  \r\n    const municipios  = useSelector(state => state.municipios.lista)  \r\n\r\n    const [nombre, setNombre] = useState('')     \r\n    const [estado, setEstado] = useState('')\r\n\r\n    const [mode, setMode] = useState('')\r\n\r\n\r\n    //dispatch\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {      \r\n      dispatch(getEstados())    \r\n      dispatch(getMunicipios())    \r\n    }, [])\r\n\r\n\r\n    const nombreEstado = (id) => {\r\n        let arr = estados.filter(x => x.id == id)\r\n      \r\n        if (arr.length > 0 ){\r\n            return (\r\n                <td>{ arr[0].nombre }</td>\r\n            )\r\n\r\n        }else{\r\n            return (\r\n                <td></td>\r\n            )\r\n        }\r\n\r\n       \r\n    }\r\n\r\n\r\n    const add = () =>{                \r\n        setMode('new')          \r\n\r\n        setId(null)\r\n        \r\n        setNombre('')\r\n        setEstado('')\r\n    }\r\n\r\n    const editar = (item) => {\r\n        \r\n        setMode('edit')\r\n\r\n        \r\n        setId(item.id)        \r\n        setNombre(item.nombre)\r\n        setEstado(item.estadoId)\r\n        \r\n        setOpen(true)\r\n    }\r\n\r\n    const remove = (item) => {\r\n        dispatch(deleteMunicipio(item.id))\r\n        dispatch(getMunicipios())        \r\n    }\r\n\r\n\r\n\r\n    const guardar = (e) => {\r\n        e.preventDefault()\r\n        \r\n        let data = {\r\n            nombre: nombre,\r\n            estado: estado\r\n        }\r\n                \r\n         \r\n        mode === 'new' \r\n            ? dispatch(addMunicipio(data))\r\n            : dispatch(editMunicipio(data, id))\r\n        \r\n         setMode('list')\r\n         setOpen(false)\r\n        \r\n    }\r\n\r\n\r\n    \r\n    const modolista = (\r\n        <>\r\n        \r\n        <Table celled>\r\n        <Table.Header>\r\n        <Table.Row>\r\n            <Table.HeaderCell>Clave</Table.HeaderCell>\r\n            <Table.HeaderCell>Nombre</Table.HeaderCell>\r\n            <Table.HeaderCell>Status</Table.HeaderCell>\r\n            <Table.HeaderCell>ops</Table.HeaderCell>\r\n        </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n            {\r\n                municipios                            \r\n                .map ((item) => (\r\n                    <Table.Row key={item.id}>\r\n                    <Table.Cell>{item.nombre}</Table.Cell>\r\n                    <Table.Cell>{nombreEstado(item.estadoId)}  </Table.Cell>\r\n                    <Table.Cell> {\r\n                            item.activo\r\n                            ? (<td> Activo</td>)\r\n                            : (<td> Baja </td>)\r\n                        }</Table.Cell>\r\n                    \r\n                    <Table.Cell> \r\n                        <Icon name='edit' size='large' onClick={ () => editar(item)} />\r\n\r\n                        <Icon name='trash' size='large' onClick={ () => remove(item)} />\r\n                    </Table.Cell>\r\n\r\n                            \r\n                    </Table.Row>                                     \r\n                ))\r\n              }\r\n           \r\n        </Table.Body>\r\n    </Table>\r\n       \r\n\r\n        </>\r\n    )\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            \r\n            <h3>Municipios</h3>            \r\n\r\n            { modolista }\r\n\r\n\r\n            <Modal\r\n                onClose={() => setOpen(false)}\r\n                onOpen={() => setOpen(true)}\r\n                open={open}\r\n                trigger={<Button inverted color='green' onClick={() => add() }>Agregar Registro</Button>}\r\n                >\r\n                <Modal.Header>Municipios</Modal.Header>\r\n                <Modal.Content image>\r\n                    \r\n                    <Modal.Description>\r\n                   \r\n\r\n                        {\r\n                            mode == 'new'\r\n                            ? (<Modal.Header>Agregando nuevo registro</Modal.Header>)\r\n                            : (<Modal.Header>editando...</Modal.Header>)\r\n                        }\r\n \r\n                        <Form>\r\n\r\n                            <label for=\"start\">Estado </label><br />\r\n                            <select \r\n                                className=\"form-control\"\r\n                                onChange={ e => setEstado(e.target.value) } \r\n                                name=\"estado\"\r\n                                value={estado}>\r\n                                <option value=\"null\">Seleccione un estado</option>                                \r\n                                {estados.map(x => (\r\n                                <option key={x.id} value={x.id}>\r\n                                    {x.clave} - {x.nombre}\r\n                                </option>\r\n                            ))}\r\n                            </select>\r\n\r\n                            <br/>\r\n                            <br/>\r\n\r\n                            <label for=\"start\">Nombre </label><br />\r\n                            <input \r\n                                type=\"text\"\r\n                                placeholder=\"nombre del municipio\"\r\n                                name=\"nombre\"\r\n                                value={nombre}\r\n                                onChange={ e => setNombre(e.target.value)}\r\n                            />\r\n                            <br/>\r\n\r\n\r\n    \r\n                            </Form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n\r\n                    <Button color='green' onClick={ guardar }>Guardar</Button>\r\n\r\n                    <Button color='grey'onClick={() => setOpen(false)}>Cancelar</Button>\r\n                   \r\n                </Modal.Actions>\r\n                </Modal>\r\n\r\n            \r\n        </>        \r\n    )\r\n};\r\n\r\n\r\nexport default Municipios\r\n\r\n \r\n","import axios from 'axios'\r\nimport { tokenConfig } from './auth'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const GET_CATEGORIAS ='GET_CATEGORIAS'\r\nexport const ADD_CATEGORIA ='ADD_CATEGORIA'\r\nexport const EDIT_CATEGORIA ='EDIT_CATEGORIA'\r\nexport const DELETE_CATEGORIA ='DELETE_CATEGORIA'\r\n \r\nconst urlbase = require('../config/url.config').address\r\n\r\n\r\nexport const getCategorias = () => (dispatch, getState) => {\r\n\r\n    \r\n    axios.get(urlbase + 'categorias/', tokenConfig(getState))\r\n        .then( res => {\r\n\r\n            dispatch({\r\n                type: GET_CATEGORIAS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n\r\nexport const addCategoria = (registro) => (dispatch, getState) => {\r\n\r\n    axios.post(urlbase + 'categorias/', registro, tokenConfig(getState))\r\n        .then (res => {\r\n\r\n            dispatch({\r\n                type: ADD_CATEGORIA,\r\n                payload: res.data\r\n            })\r\n\r\n            toast.success(\"El registro se agrego exitosamente\")\r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n        \r\n}\r\nexport const editCategoria = (registro, id) => (dispatch, getState) => {    \r\n    axios.put(urlbase + `categorias/${id}`, registro, tokenConfig(getState))\r\n        .then (res => {\r\n            \r\n            dispatch({\r\n                type: EDIT_CATEGORIA,\r\n                payload: res.data\r\n            })\r\n\r\n            toast.success(\"El registro se modifico exitosamente\")\r\n\r\n             \r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n\r\nexport const deleteCategoria = (id) => (dispatch, getState) => {\r\n\r\n    \r\n    axios.delete(urlbase + `categorias/${id}`,  tokenConfig(getState))    \r\n        .then( res => {\r\n            toast.success(\"El registro se elimino exitosamente\")\r\n            \r\n            dispatch ({\r\n                type: DELETE_CATEGORIA,\r\n                payload: id\r\n            })\r\n            \r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n\r\n ","import React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getCategorias, addCategoria, editCategoria, deleteCategoria } from '../actions/categoriasActions'\r\n\r\nimport {Table,Form, Button,  Modal, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst Categoria = () => {\r\n\r\n    //useStates\r\n    const [id, setId] = useState(null)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [clave, setClave] = useState('')\r\n    const [nombre, setNombre] = useState('')\r\n\r\n    const [mode, setMode] = useState('')\r\n\r\n\r\n    //selectors\r\n    const categorias  = useSelector(state => state.categorias.lista)\r\n\r\n    \r\n    //dispatch\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    // let history = useHistory();\r\n    useEffect(() => {                \r\n        dispatch(getCategorias())\r\n    },[])\r\n\r\n \r\n \r\n    const add = () =>{                \r\n        setMode('new')          \r\n\r\n        setId(null)\r\n        \r\n        setNombre('')\r\n        setClave('')\r\n    }\r\n\r\n    const editar = (item) => {\r\n        \r\n        setMode('edit')\r\n\r\n        \r\n        setId(item.id)        \r\n        setNombre(item.nombre)\r\n        setClave(item.clave)\r\n        \r\n        setOpen(true)\r\n    }\r\n\r\n\r\n    const remove = (item) => {\r\n        dispatch(deleteCategoria(item.id))\r\n        dispatch(getCategorias())        \r\n    }\r\n\r\n    const guardar = (e) => {\r\n        e.preventDefault()\r\n        \r\n        let data = {\r\n            clave: clave,\r\n            nombre: nombre\r\n        }\r\n         \r\n         \r\n        mode === 'new' \r\n            ? dispatch(addCategoria(data))\r\n            : dispatch(editCategoria(data, id))\r\n\r\n        setMode('list')\r\n        setOpen(false)\r\n            \r\n         \r\n    }\r\n \r\n\r\n    \r\n    const modolista = (\r\n        <>\r\n\r\n             \r\n        <Table celled>\r\n        <Table.Header>\r\n        <Table.Row>\r\n            <Table.HeaderCell>Clave</Table.HeaderCell>\r\n            <Table.HeaderCell>Nombre</Table.HeaderCell>\r\n            <Table.HeaderCell>Status</Table.HeaderCell>\r\n            <Table.HeaderCell>operaiones</Table.HeaderCell>\r\n        </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n            {\r\n                categorias                            \r\n                .map ((item) => (\r\n                    <Table.Row key={item.id}>\r\n                    <Table.Cell>{item.clave}  </Table.Cell>\r\n                    <Table.Cell>{item.nombre}</Table.Cell>\r\n                    <Table.Cell> {\r\n                            item.activo\r\n                            ? (<td> Activa</td>)\r\n                            : (<td> Baja </td>)\r\n                        }</Table.Cell>\r\n                    \r\n                    <Table.Cell> \r\n                        <Icon name='edit' size='large' onClick={ () => editar(item)} />\r\n\r\n                        <Icon name='trash' size='large' onClick={ () => remove(item)} />\r\n                    </Table.Cell>\r\n\r\n                            \r\n                    </Table.Row>                                     \r\n                ))\r\n              }\r\n           \r\n        </Table.Body>\r\n    </Table>\r\n\r\n        </>\r\n    )\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            \r\n            <h3>categorias</h3>            \r\n\r\n            { modolista }\r\n            \r\n\r\n\r\n            <Modal\r\n                onClose={() => setOpen(false)}\r\n                onOpen={() => setOpen(true)}\r\n                open={open}\r\n                trigger={<Button inverted color='green' onClick={() => add() }>Agregar Registro</Button>}\r\n                >\r\n                <Modal.Header>Categorias</Modal.Header>\r\n                <Modal.Content image>\r\n                    \r\n                    <Modal.Description>\r\n                    \r\n                        <Form>\r\n                        \r\n\r\n                            <label for=\"start\">Clave </label><br />\r\n                            <input \r\n                                type=\"text\"\r\n                                placeholder=\"clave de la categoria\"\r\n                                name=\"clave\"\r\n                                value={clave}\r\n                                onChange={ e => setClave(e.target.value)}\r\n                            />\r\n                            <br/>\r\n            \r\n                            <label for=\"start\">Nombre </label><br />\r\n                            <input \r\n                                type=\"text\"\r\n                                placeholder=\"indique el nombre de la categoria\"\r\n                                name=\"nombre\"\r\n                                value={nombre}\r\n                                onChange={ e => setNombre(e.target.value)}\r\n                            />\r\n                            <br/>\r\n            \r\n                            \r\n                             \r\n                        </Form>\r\n\r\n\r\n\r\n\r\n\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n\r\n                    <Button color='green' onClick={ guardar }>Guardar</Button>\r\n\r\n                    <Button color='grey'onClick={() => setOpen(false)}>Cancelar</Button>\r\n                   \r\n                </Modal.Actions>\r\n                </Modal>\r\n\r\n\r\n        </>        \r\n    )\r\n    \r\n        \r\n    \r\n}\r\n\r\n\r\nexport default Categoria","import axios from 'axios'\r\nimport { tokenConfig } from './auth'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const GET_CLIENTES ='GET_CLIENTES'\r\nexport const ADD_CLIENTE ='ADD_CLIENTE'\r\nexport const EDIT_CLIENTE ='EDIT_CLIENTE'\r\nexport const DELETE_CLIENTE ='DELETE_CLIENTE'\r\nexport const SET_CLIENTE_MODE = 'SET_CLIENTE_MODE'\r\nexport const SET_CLIENTE_ID = 'SET_CLIENTE_ID'\r\n\r\nconst urlbase = require('../config/url.config').address\r\n\r\n\r\nexport const getClientes = () => (dispatch, getState) => {\r\n\r\n    \r\n    axios.get(urlbase + 'clientes/', tokenConfig(getState))\r\n        .then( res => {\r\n            dispatch({\r\n                type: GET_CLIENTES,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n\r\nexport const addCliente = (registro) => (dispatch, getState) => {\r\n\r\n    axios.post(urlbase + 'clientes/', registro, tokenConfig(getState))\r\n        .then (res => {\r\n\r\n            dispatch({\r\n                type: ADD_CLIENTE,\r\n                payload: res.data\r\n            })\r\n\r\n            toast.success(\"El registro se agrego exitosamente\")\r\n\r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n        \r\n}\r\nexport const editCliente = (registro, id) => (dispatch, getState) => {    \r\n    axios.put(urlbase + `clientes/${id}`, registro, tokenConfig(getState))\r\n        .then (res => {\r\n            \r\n            dispatch({\r\n                type: EDIT_CLIENTE,\r\n                payload: res.data\r\n            })\r\n\r\n            toast.success(\"El registro se modifico exitosamente\")\r\n\r\n             \r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n\r\nexport const deleteCliente = (id) => (dispatch, getState) => {\r\n\r\n    \r\n    axios.delete(urlbase + `clientes/${id}`,  tokenConfig(getState))    \r\n        .then( res => {\r\n            dispatch ({\r\n                type: DELETE_CLIENTE,\r\n                payload: id\r\n            })\r\n\r\n            toast.success(\"El registro se elimino exitosamente\")\r\n\r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n\r\nexport const setClienteMode = (newmode) => (dispatch) => {\r\n    dispatch ({\r\n        type: SET_CLIENTE_MODE,\r\n        payload: newmode\r\n    })\r\n}\r\n\r\nexport const setClienteID = (newID) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_CLIENTE_ID,\r\n        payload: newID\r\n    })\r\n}","import React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {getEstados} from '../actions/estadosActions'\r\nimport {getMunicipios} from '../actions/municipiosActions'\r\nimport {getCategorias} from '../actions/categoriasActions'\r\nimport {getClientes, addCliente, editCliente, deleteCliente, setClienteID} from '../actions/clientesActions'\r\n \r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Table, Button,  Modal, Grid, Form, Icon } from 'semantic-ui-react'\r\n\r\n\r\n\r\nconst Clientes = () => {\r\n    \r\n    let history = useHistory();\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [filtro, setFiltro] = useState('')\r\n\r\n    //useStates\r\n    const [id, setId] = useState(null)\r\n\r\n    const estados  = useSelector(state => state.estados.lista)  \r\n    const municipios  = useSelector(state => state.municipios.lista)  \r\n    const categorias  = useSelector(state => state.categorias.lista)  \r\n    \r\n    const clientes  = useSelector(state => state.clientes.lista)      \r\n    const [mode, setMode] = useState('')\r\n\r\n    const initClient = {nombre: '', \r\n                        apellidos: '',\r\n                        razonSocial:'',\r\n                        rfc:'',\r\n                        calle:'',\r\n                        numeroExterior:'',\r\n                        referencia:'',\r\n                        colonia:'',\r\n                        localidad:'',\r\n                        cp:'',\r\n                        whatsapp:'',\r\n                        telefono:'',\r\n                        email:'',\r\n                        categoria:'',\r\n                        estado:'',\r\n                        municipio:'',\r\n                    };\r\n\r\n    const [cliente, setCliente] = useState(initClient);\r\n\r\n\r\n\r\n    //dispatch\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {      \r\n      dispatch(getEstados())    \r\n      dispatch(getMunicipios())    \r\n      dispatch(getCategorias())    \r\n      \r\n      dispatch(getClientes())    \r\n    }, [])\r\n\r\n\r\n    const nombreEstado = (id) => {\r\n        let arr = estados.filter(x => x.id == id)\r\n      \r\n        if (arr.length > 0 ){\r\n            return (\r\n                <td>{ arr[0].nombre }</td>\r\n            )\r\n        }else{\r\n            return (\r\n                <td></td>\r\n            )\r\n        }       \r\n    }\r\n\r\n\r\n    const nombreMunicipio = (id) => {\r\n        let arr = municipios.filter(x => x.id == id)\r\n      \r\n        if (arr.length > 0 ){\r\n            return (\r\n                <td>{ arr[0].nombre }</td>\r\n            )\r\n        }else{\r\n            return (\r\n                <td></td>\r\n            )\r\n        }       \r\n    }\r\n\r\n\r\n    const nombreCategoria = (id) => {\r\n        let arr = categorias.filter(x => x.id == id)\r\n      \r\n        if (arr.length > 0 ){\r\n            return (\r\n                <td>{ arr[0].nombre }</td>\r\n            )\r\n        }else{\r\n            return (\r\n                <td></td>\r\n            )\r\n        }       \r\n    }\r\n\r\n    const add = () =>{                \r\n \r\n        setMode('new')          \r\n        setId(null)\r\n        \r\n        setCliente(initClient)        \r\n\r\n    }\r\n\r\n    const editar = (item) => {\r\n        setMode('edit')\r\n\r\n        \r\n        setId(item.id)        \r\n        setCliente({\r\n            ...cliente,\r\n            nombre: item.nombre, \r\n            apellidos: item.apellidos, \r\n            razonSocial: item.razonSocial, \r\n            rfc: item.rfc, \r\n            calle: item.calle, \r\n            numeroExterior: item.numeroExterior, \r\n            referencia: item.referencia, \r\n            colonia: item.colonia, \r\n            cp: item.cp, \r\n            telefono: item.telefono, \r\n            categoria: item.categoriaId,\r\n            estado: item.estadoId,\r\n            municipio: item.municipioId\r\n        })\r\n         \r\n        setOpen(true)\r\n\r\n    }\r\n\r\n    const remove = (item) => {\r\n        dispatch(deleteCliente(item.id))\r\n        dispatch(getClientes())        \r\n    }\r\n\r\n\r\n    const addDomicilio = (item) => {\r\n        dispatch(setClienteID(item.id))\r\n\r\n        history.push(\"/datosentrega\");\r\n    }\r\n\r\n\r\n    const guardar = (e) => {\r\n        e.preventDefault()\r\n        \r\n         \r\n        mode === 'new' \r\n            ? dispatch(addCliente(cliente))\r\n            : dispatch(editCliente(cliente, id))\r\n\r\n    \r\n        setMode('list')\r\n        setOpen(false)\r\n   \r\n        \r\n    }\r\n\r\n\r\n    \r\n    const modolista = (\r\n        <>\r\n\r\n            <input \r\n                type=\"text\"                \r\n                name=\"filtro\"\r\n                value={filtro}\r\n                placeholder=\"filtro...\"\r\n                onChange={ e => setFiltro(e.target.value)}\r\n            />\r\n\r\n        <Table celled striped>\r\n        <Table.Header>\r\n        <Table.Row>\r\n            <Table.HeaderCell>RFC</Table.HeaderCell>\r\n            <Table.HeaderCell>Nombre</Table.HeaderCell>\r\n            <Table.HeaderCell>Razon Social</Table.HeaderCell>\r\n            <Table.HeaderCell>Domicilio</Table.HeaderCell>\r\n            <Table.HeaderCell>whatsapp</Table.HeaderCell>\r\n            <Table.HeaderCell>operaciones</Table.HeaderCell>\r\n            <Table.HeaderCell>Datos Entrega</Table.HeaderCell>\r\n        </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n            {\r\n                clientes         \r\n                .filter(x=> x.nombre.includes(filtro) \r\n                        || x.apellidos.includes(filtro)\r\n                        || x.rfc.includes(filtro)\r\n                        || x.razonSocial.includes(filtro)\r\n                        || x.calle.includes(filtro)\r\n                        || x.colonia.includes(filtro)\r\n                        || x.whatsapp.includes(filtro)\r\n                ).map ((item) => (\r\n                    <Table.Row key={item.id}>\r\n                        <Table.Cell>{item.rfc}</Table.Cell>\r\n                        <Table.Cell>{item.nombre} {item.apellidos}</Table.Cell>\r\n                        <Table.Cell>{item.razonSocial}</Table.Cell>\r\n                        <Table.Cell>{item.calle} #{item.numeroExterior}, col. {item.colonia}   </Table.Cell>\r\n                        <Table.Cell>{item.whatsapp}</Table.Cell>\r\n                        \r\n                        <Table.Cell> \r\n\r\n                            <Icon name='edit' size='large' onClick={ () => editar(item)} />\r\n\r\n                            <Icon name='trash' size='large' onClick={ () => remove(item)} />\r\n                            \r\n                        </Table.Cell>               \r\n\r\n                        <Table.Cell> \r\n\r\n                         <Icon name='angle double right' size='large' onClick={ () => addDomicilio(item)} />\r\n                        \r\n                        </Table.Cell>                        \r\n                    </Table.Row>                                     \r\n                ))\r\n              }\r\n           \r\n        </Table.Body>\r\n    </Table>\r\n\r\n                         \r\n\r\n        </>\r\n    )\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            \r\n            <h3>Clientes</h3>            \r\n\r\n            {   modolista  }\r\n            \r\n            <Modal\r\n                onClose={() => setOpen(false)}\r\n                onOpen={() => setOpen(true)}\r\n                open={open}\r\n                trigger={<Button inverted color='green' onClick={() => add() }>Agregar Registro</Button>}\r\n                >\r\n                <Modal.Header>Clientes</Modal.Header>\r\n                <Modal.Content image>\r\n                    \r\n                    <Modal.Description>\r\n                   \r\n                        {\r\n                            mode == 'new'\r\n                            ? (<Modal.Header>Agregando nuevo registro</Modal.Header>)\r\n                            : (<Modal.Header>editando...</Modal.Header>)\r\n                        }\r\n                    \r\n\r\n                    <Form>\r\n\r\n                    <Grid columns={3} divided>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <label for=\"start\">Nombre </label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"nombre\"\r\n                                    value={cliente.nombre}\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                />\r\n\r\n                                <br/>\r\n                                <label for=\"start\">apellidos </label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"apellidos\"\r\n                                    value={cliente.apellidos}\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                />\r\n\r\n                                <br/>   \r\n                                <label for=\"start\">razón social </label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"razonSocial\"\r\n                                    value={cliente.razonSocial}\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                />\r\n                                <br/>\r\n                                <label for=\"start\">rfc </label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"rfc\"\r\n                                    value={cliente.rfc}\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                />\r\n\r\n\r\n                                <br/>\r\n                                <label for=\"start\">Categoria </label><br />\r\n                                <select \r\n                                    className=\"form-control\"\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                    name=\"categoria\"\r\n                                    value={cliente.categoria}>\r\n                                    <option value=\"null\">Seleccione una categoria</option>                                \r\n                                    {categorias.map(x => (\r\n                                    <option key={x.id} value={x.id}>\r\n                                        {x.nombre}\r\n                                    </option>\r\n                                ))}\r\n                                </select>\r\n\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n\r\n                                <label for=\"start\">calle</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"calle\"\r\n                                    value={cliente.calle}\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                />\r\n                                <br/>\r\n                                <label for=\"start\"># ext</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"numeroExterior\"\r\n                                    value={cliente.numeroExterior}\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                />\r\n                                <br/>\r\n                                <label for=\"start\">referencia</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"referencia\"\r\n                                    value={cliente.referencia}\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                />\r\n                                <br/>\r\n                                <label for=\"start\">colonia</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"colonia\"\r\n                                    value={cliente.colonia}\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                />\r\n                                <br/>\r\n                                <label for=\"start\">localidad</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"localidad\"\r\n                                    value={cliente.localidad}\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                />\r\n                                <br/>\r\n                                <label for=\"start\">cp</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"cp\"\r\n                                    value={cliente.cp}\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                />                             \r\n\r\n\r\n                            </Grid.Column>\r\n                         \r\n                            <Grid.Column>\r\n\r\n                                <label for=\"start\">whatsapp</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"whatsapp\"\r\n                                    value={cliente.whatsapp}\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                />\r\n                                <br/>\r\n                                <label for=\"start\">telefono</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"telefono\"\r\n                                    value={cliente.telefono}\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                />\r\n                                <br/>\r\n                                <label for=\"start\">email</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"email\"\r\n                                    value={cliente.email}\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                />\r\n\r\n\r\n                                    \r\n                                    <br/>\r\n                                <label for=\"start\">Estado </label><br />\r\n                                <select \r\n                                    className=\"form-control\"\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                    name=\"estado\"\r\n                                    value={cliente.estado}>\r\n                                    <option value=\"null\">Seleccione un estado</option>                                \r\n                                    {estados.map(x => (\r\n                                    <option key={x.id} value={x.id}>\r\n                                        {x.clave} - {x.nombre}\r\n                                    </option>\r\n                                ))}\r\n                                </select>\r\n\r\n                                    \r\n                                    <br/>\r\n                                <label for=\"start\">Municipio </label><br />\r\n                                <select \r\n                                    className=\"form-control\"\r\n                                    onChange={ e => setCliente({...cliente, [e.target.name]: e.target.value})}\r\n                                    name=\"municipio\"\r\n                                    value={cliente.municipio}>\r\n                                    <option value=\"null\">Seleccione un municipio</option>                                \r\n                                    {municipios\r\n                                    .filter (x => x.estadoId == cliente.estado)\r\n                                    .map(x => (\r\n                                    <option key={x.id} value={x.id}>\r\n                                        {x.nombre}\r\n                                    </option>\r\n                                ))}\r\n                                </select>\r\n                             \r\n\r\n\r\n                            </Grid.Column>\r\n                         \r\n                        </Grid.Row>\r\n                    </Grid>\r\n\r\n\r\n                </Form>\r\n \r\n\r\n\r\n\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n\r\n                    <Button color='green' onClick={ guardar }>Guardar</Button>\r\n\r\n                    <Button color='grey'onClick={() => setOpen(false)}>Cancelar</Button>\r\n                   \r\n                </Modal.Actions>\r\n                </Modal>\r\n\r\n\r\n        </>        \r\n    )\r\n};\r\n\r\n\r\nexport default Clientes\r\n\r\n \r\n","import axios from 'axios'\r\nimport { tokenConfig } from './auth'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const GET_CLIENTE_DATOS_ENTREGAS ='GET_CLIENTE_DATOS_ENTREGAS'\r\nexport const ADD_CLIENTE_DATOS_ENTREGA ='ADD_CLIENTE_DATOS_ENTREGA'\r\nexport const EDIT_CLIENTE_DATOS_ENTREGA ='EDIT_CLIENTE_DATOS_ENTREGA'\r\nexport const DELETE_CLIENTE_DATOS_ENTREGA ='DELETE_CLIENTE_DATOS_ENTREGA'\r\nexport const SET_CLIENTE_DATOS_ENTREGA_MODE = 'SET_CLIENTE_DATOS_ENTREGA_MODE'\r\n\r\nconst urlbase = require('../config/url.config').address\r\n\r\n\r\nexport const getDatosEntrega = () => (dispatch, getState) => {\r\n\r\n    \r\n    axios.get(urlbase + 'clientesDatosEntrega/', tokenConfig(getState))\r\n        .then( res => {\r\n            dispatch({\r\n                type: GET_CLIENTE_DATOS_ENTREGAS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n\r\nexport const addDatosEntrega = (registro) => (dispatch, getState) => {\r\n\r\n    axios.post(urlbase + 'clientesDatosEntrega/', registro, tokenConfig(getState))\r\n        .then (res => {\r\n\r\n            dispatch({\r\n                type: ADD_CLIENTE_DATOS_ENTREGA,\r\n                payload: res.data\r\n            })\r\n\r\n            toast.success(\"El registro se agrego exitosamente\")\r\n\r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n        \r\n}\r\nexport const editDatosEntrega = (registro, id) => (dispatch, getState) => {    \r\n    axios.put(urlbase + `clientesDatosEntrega/${id}`, registro, tokenConfig(getState))\r\n        .then (res => {\r\n            \r\n            dispatch({\r\n                type: EDIT_CLIENTE_DATOS_ENTREGA,\r\n                payload: res.data\r\n            })\r\n\r\n            toast.success(\"El registro se modifico exitosamente\")\r\n\r\n             \r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n\r\nexport const deleteDatosEntrega = (id) => (dispatch, getState) => {\r\n\r\n    \r\n    axios.delete(urlbase + `clientesDatosEntrega/${id}`,  tokenConfig(getState))    \r\n        .then( res => {\r\n            dispatch ({\r\n                type: DELETE_CLIENTE_DATOS_ENTREGA,\r\n                payload: id\r\n            })\r\n\r\n            toast.success(\"El registro se elimino exitosamente\")\r\n        })\r\n        .catch(err => toast.error(err.response.data.error)  )\r\n}\r\n\r\nexport const setDatosEntregaMode = (newmode) => (dispatch) => {\r\n    dispatch ({\r\n        type: SET_CLIENTE_DATOS_ENTREGA_MODE,\r\n        payload: newmode\r\n    })\r\n}\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {getEstados} from '../actions/estadosActions'\r\nimport {getMunicipios} from '../actions/municipiosActions' \r\nimport {getClientes, setClienteID} from '../actions/clientesActions'\r\nimport {getDatosEntrega, addDatosEntrega, editDatosEntrega, deleteDatosEntrega } from '../actions/clientesDatosEntregaActions'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n \r\nimport { Table, Grid, Button,  Modal, Form, Icon } from 'semantic-ui-react'\r\n\r\n\r\n\r\nconst DatosEntrega = () => {\r\n\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [filtro, setFiltro] = useState('')\r\n    \r\n\r\n    //useStates\r\n    const [id, setId] = useState(null)\r\n\r\n    const estados  = useSelector(state => state.estados.lista)  \r\n    const municipios  = useSelector(state => state.municipios.lista)  \r\n    \r\n    const clientes  = useSelector(state => state.clientes.lista)      \r\n    const idCliente  = useSelector(state => state.clientes.idCliente)      \r\n    \r\n    const datosEntrega  = useSelector(state => state.datosEntrega.lista)  \r\n    \r\n    const [mode, setMode] = useState('')\r\n\r\n    const datoInicial = {\r\n        calle:'',\r\n        numeroExterior:'',\r\n        referencia:'',\r\n        colonia:'',\r\n        localidad:'',\r\n        coordenadas:'',\r\n        telefono:'',\r\n        datosEntregaDomicilio:'',\r\n        asignacionRuta:'',\r\n        cliente: idCliente,\r\n        estado:'',\r\n        municipio:'',\r\n    };\r\n\r\n    const [datoEntrega, setDatoEntrega] = useState(datoInicial);\r\n\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    //dispatch\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {      \r\n      dispatch(getEstados())    \r\n      dispatch(getMunicipios())    \r\n      \r\n      dispatch(getClientes())    \r\n      dispatch(getDatosEntrega())\r\n    }, [])\r\n\r\n\r\n\r\n    const subheader = (\r\n        <>\r\n            <div className=\"wrapper\">\r\n                  \r\n                <div className=\"grid-item\">\r\n                    Cliente : \r\n                    { clientes.filter(x=>x.id == idCliente)[0].nombre } { clientes.filter(x=>x.id == idCliente)[0].apellidos }     \r\n                </div>\r\n                                \r\n                <div> \r\n                    <Button color='green' onClick={ () => regresar()}>Regresar</Button>\r\n\r\n                </div>  \r\n\r\n            </div>        \r\n        </> \r\n    )\r\n\r\n\r\n\r\n    const regresar = () => {\r\n        dispatch(setClienteID(''))\r\n        history.push(\"/clientes\")\r\n    }\r\n\r\n\r\n\r\n\r\n    const nombreEstado = (id) => {\r\n        let arr = estados.filter(x => x.id == id)\r\n      \r\n        if (arr.length > 0 ){\r\n            return (\r\n                <td>{ arr[0].nombre }</td>\r\n            )\r\n        }else{\r\n            return (\r\n                <td></td>\r\n            )\r\n        }       \r\n    }\r\n\r\n\r\n    const nombreMunicipio = (id) => {\r\n        let arr = municipios.filter(x => x.id == id)\r\n      \r\n        if (arr.length > 0 ){\r\n            return (\r\n                <td>{ arr[0].nombre }</td>\r\n            )\r\n        }else{\r\n            return (\r\n                <td></td>\r\n            )\r\n        }       \r\n    }\r\n \r\n    const add = () =>{                \r\n\r\n        setMode('new')          \r\n\r\n        setId(null)\r\n        \r\n        setDatoEntrega(datoInicial)\r\n\r\n    }\r\n\r\n    const editar = (item) => {\r\n        \r\n        setMode('edit')        \r\n        setId(item.id) \r\n\r\n        setDatoEntrega({\r\n            ...datoEntrega,\r\n            calle:item.calle, \r\n            numeroExterior: item.numeroExterior, \r\n            referencia: item.referencia, \r\n            colonia: item.colonia, \r\n            localidad: item.localidad, \r\n            coordenadas: item.coordenadas, \r\n            telefono: item.telefono, \r\n            datosEntregaDomicilio: item.datosEntregaADomicilio, \r\n            asignacionRuta: item.asignacionRuta,\r\n            cliente: item.clienteId,\r\n            estado: item.estadoId,\r\n            municipio: item.municipioId\r\n        })\r\n         \r\n        setOpen(true)\r\n        \r\n    }\r\n\r\n    const remove = (item) => {\r\n        dispatch(deleteDatosEntrega(item.id))\r\n        dispatch(getDatosEntrega())        \r\n    }\r\n\r\n     \r\n\r\n    const guardar = (e) => {\r\n        e.preventDefault()\r\n        mode === 'new' \r\n            ? dispatch(addDatosEntrega(datoEntrega))\r\n            : dispatch(editDatosEntrega(datoEntrega, id))\r\n\r\n            setMode('list')\r\n            setOpen(false)\r\n   \r\n    }\r\n\r\n\r\n\r\n    \r\n    const modolista = (\r\n        <>\r\n            <input \r\n                type=\"text\"                \r\n                name=\"filtro\"\r\n                value={filtro}\r\n                placeholder=\"filtro...\"\r\n                onChange={ e => setFiltro(e.target.value)}\r\n            />\r\n\r\n            <Table celled>\r\n                <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>Domicilio</Table.HeaderCell>\r\n                    <Table.HeaderCell>Localidad</Table.HeaderCell>\r\n                    <Table.HeaderCell>Muncipio</Table.HeaderCell>\r\n                    <Table.HeaderCell>Estado</Table.HeaderCell>\r\n                    <Table.HeaderCell>Datos de Entrega</Table.HeaderCell>\r\n                    <Table.HeaderCell>Asignacion de Ruta</Table.HeaderCell>\r\n                    <Table.HeaderCell>ops</Table.HeaderCell>\r\n                </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {\r\n                        datosEntrega\r\n                        .filter (x => x.clienteId == idCliente && (x.calle.includes(filtro) \r\n                                                                || x.localidad.includes(filtro)                                                                \r\n                                                                || x.datosEntregaADomicilio.includes(filtro)\r\n                                                                || x.asignacionRuta.includes(filtro)\r\n                                                                ))                            \r\n                        .map ((item) => (\r\n                            <Table.Row key={item.id}>\r\n                            <Table.Cell>{item.calle} {item.numeroExterior}</Table.Cell>\r\n                            <Table.Cell>{item.localidad} </Table.Cell>\r\n                            <Table.Cell>{nombreMunicipio(item.municipioId)}  </Table.Cell>\r\n                            <Table.Cell>{nombreEstado(item.estadoId)}  </Table.Cell>\r\n                            <Table.Cell>{item.datosEntregaADomicilio}</Table.Cell>\r\n                            <Table.Cell>{item.asignacionRuta}</Table.Cell>\r\n                             \r\n                            <Table.Cell> \r\n                                 \r\n                                <Icon name='edit' size='large' onClick={ () => editar(item)} />\r\n\r\n                                <Icon name='trash' size='large' onClick={ () => remove(item)} />\r\n                            </Table.Cell>\r\n\r\n                                    \r\n                            </Table.Row>                                     \r\n                        ))\r\n                    }\r\n                \r\n                </Table.Body>\r\n            </Table>\r\n                    \r\n         \r\n       \r\n\r\n        </>\r\n    )\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n           {subheader}\r\n           <br />\r\n            <h3>Datos Entrega</h3>            \r\n\r\n            { modolista }\r\n            \r\n            <Modal\r\n                onClose={() => setOpen(false)}\r\n                onOpen={() => setOpen(true)}\r\n                open={open}\r\n                trigger={<Button inverted color='green' onClick={() => add() }>Agregar Registro</Button>}\r\n                >\r\n                <Modal.Header>Clientes</Modal.Header>\r\n                <Modal.Content image>\r\n                    \r\n                    <Modal.Description>\r\n                   \r\n                        {\r\n                            mode == 'new'\r\n                            ? (<Modal.Header>Agregando nuevo registro</Modal.Header>)\r\n                            : (<Modal.Header>editando...</Modal.Header>)\r\n                        }\r\n\r\n                    <Form>                    \r\n\r\n                    <Grid columns={3} divided>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n\r\n                                <label for=\"start\">calle</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"calle\"\r\n                                    value={datoEntrega.calle}\r\n                                    onChange={ e => setDatoEntrega({...datoEntrega, [e.target.name]: e.target.value})}\r\n                                />\r\n                                 <br/>\r\n                                <label for=\"start\"># ext</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"numeroExterior\"\r\n                                    value={datoEntrega.numeroExterior}\r\n                                    onChange={ e => setDatoEntrega({...datoEntrega, [e.target.name]: e.target.value})}\r\n                                />\r\n                                <br/>\r\n                                <label for=\"start\">referencia</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"referencia\"\r\n                                    value={datoEntrega.referencia}\r\n                                    onChange={ e => setDatoEntrega({...datoEntrega, [e.target.name]: e.target.value})}\r\n                                />\r\n                                <br/>\r\n                                <label for=\"start\">colonia</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"colonia\"\r\n                                    value={datoEntrega.colonia}\r\n                                    onChange={ e => setDatoEntrega({...datoEntrega, [e.target.name]: e.target.value})}\r\n                                />\r\n                                <br/>\r\n                                <label for=\"start\">localidad</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"localidad\"\r\n                                    value={datoEntrega.localidad}\r\n                                    onChange={ e => setDatoEntrega({...datoEntrega, [e.target.name]: e.target.value})}\r\n                                />\r\n\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n\r\n                                <label for=\"start\">coordenadas</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"coordenadas\"\r\n                                    value={datoEntrega.coordenadas}\r\n                                    onChange={ e => setDatoEntrega({...datoEntrega, [e.target.name]: e.target.value})}\r\n                                />\r\n                                <br/>\r\n                                <label for=\"start\">telefono</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"telefono\"\r\n                                    value={datoEntrega.telefono}\r\n                                    onChange={ e => setDatoEntrega({...datoEntrega, [e.target.name]: e.target.value})}\r\n                                />\r\n                                <br/>\r\n                                <label for=\"start\">Datos Entrega</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"datosEntregaDomicilio\"\r\n                                    value={datoEntrega.datosEntregaDomicilio}\r\n                                    onChange={ e => setDatoEntrega({...datoEntrega, [e.target.name]: e.target.value})}\r\n                                />\r\n                                <br/>\r\n                                <label for=\"start\">asignacion de ruta</label><br />\r\n                                <input \r\n                                    type=\"text\"                \r\n                                    name=\"asignacionRuta\"\r\n                                    value={datoEntrega.asignacionRuta}\r\n                                    onChange={ e => setDatoEntrega({...datoEntrega, [e.target.name]: e.target.value})}\r\n                                />\r\n   \r\n\r\n                            </Grid.Column>\r\n                         \r\n                            <Grid.Column>\r\n\r\n                                    <label for=\"start\">Estado </label><br />\r\n                                    <select \r\n                                        className=\"form-control\"\r\n                                        onChange={ e => setDatoEntrega({...datoEntrega, [e.target.name]: e.target.value})}\r\n                                        name=\"estado\"\r\n                                        value={datoEntrega.estado}>\r\n                                        <option value=\"null\">Seleccione un estado</option>                                \r\n                                        {estados.map(x => (\r\n                                        <option key={x.id} value={x.id}>\r\n                                            {x.clave} - {x.nombre}\r\n                                        </option>\r\n                                    ))}\r\n                                    </select>\r\n\r\n                                        \r\n                                        <br/>\r\n                                    <label for=\"start\">Municipio </label><br />\r\n                                    <select \r\n                                        className=\"form-control\"\r\n                                        onChange={ e => setDatoEntrega({...datoEntrega, [e.target.name]: e.target.value})}\r\n                                        name=\"municipio\"\r\n                                        value={datoEntrega.municipio}>\r\n                                        <option value=\"null\">Seleccione un municipio</option>                                \r\n                                        {municipios\r\n                                        .filter (x => x.estadoId == datoEntrega.estado)\r\n                                        .map(x => (\r\n                                        <option key={x.id} value={x.id}>\r\n                                            {x.nombre}\r\n                                        </option>\r\n                                    ))}\r\n                                    </select>\r\n                              \r\n\r\n\r\n                            </Grid.Column>\r\n                         \r\n                        </Grid.Row>\r\n                    </Grid>\r\n\r\n\r\n\r\n                    </Form>\r\n\r\n\r\n\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n\r\n                    <Button color='green' onClick={ guardar }>Guardar</Button>\r\n\r\n                    <Button color='grey'onClick={() => setOpen(false)}>Cancelar</Button>\r\n                   \r\n                </Modal.Actions>\r\n                </Modal>\r\n\r\n\r\n        </>        \r\n    )\r\n};\r\n\r\n\r\nexport default DatosEntrega","// import './App.css';\r\n\r\nimport Header from  './components/layouts/Header'\r\nimport PrivateRoute from './components/common/PrivateRoute'\r\nimport Login from './components/accounts/Login'\r\nimport Register from './components/accounts/Register'\r\n\r\nimport Home from './components/Home'\r\nimport Estados from './components/Estados'\r\nimport Municipios from './components/Municipios'\r\nimport Categorias from './components/Categoria'\r\nimport Clientes from './components/Cliente'\r\nimport DatosEntrega from './components/DatosEntrega'\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { Route, Switch, } from 'react-router-dom'\r\nimport {\r\n  Container,\r\n  Divider,  \r\n  Image,\r\n  List,  \r\n  Segment,\r\n} from 'semantic-ui-react'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <Header />\r\n      \r\n   \r\n\r\n      <Container text style={{ marginTop: '7em' }}>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n          \r\n            <PrivateRoute exact path=\"/estados\" component={Estados} />\r\n            <PrivateRoute exact path=\"/municipios\" component={Municipios} />\r\n            <PrivateRoute exact path=\"/categorias\" component={Categorias} />\r\n            <PrivateRoute exact path=\"/clientes\" component={Clientes} />\r\n            <PrivateRoute exact path=\"/datosEntrega\" component={DatosEntrega} />\r\n\r\n        </Switch>\r\n      </Container>\r\n\r\n      <ToastContainer />\r\n\r\n    <Segment inverted vertical style={{ margin: '5em 0em 0em', padding: '5em 0em' }}>\r\n      <Container textAlign='center'>\r\n        \r\n        \r\n        <List horizontal inverted divided link size='small'>\r\n          <List.Item as='a' href='#'>\r\n            Aqua Mariel\r\n          </List.Item>\r\n          <List.Item as='a' href='#'>\r\n            Tel :  2282555379\r\n          </List.Item>\r\n          <List.Item as='a' href='#'>\r\n            contacto@corporativoaquamariel.com\r\n          </List.Item>\r\n          <List.Item as='a' href='#'>\r\n            Productos de Limpieza\r\n          </List.Item>\r\n        </List>\r\n      </Container>\r\n    </Segment>\r\n  </div>\r\n \r\n\r\n      \r\n \r\n  );\r\n}\r\nexport default App;\r\n ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import  { LOGIN_SUCCESS, LOGIN_FAIL, REGISTER_FAIL, REGISTER_SUCCESS,LOGOUT_SUCCESS} from '../actions/auth'\r\n\r\n//nextia\r\n/*\r\nconst initialState = {\r\n    accessToken: localStorage.getItem('token'),    \r\n    isAuthenticated: null, \r\n    username: null,\r\n    email: null,\r\n    roles: []\r\n}\r\n*/ \r\n\r\nconst initialState = {\r\n    accessToken: localStorage.getItem('token'),    \r\n    username: localStorage.getItem('username'),    \r\n    id : null,\r\n    email:null,\r\n    role:null,\r\n    member:{},\r\n    isAuthenticated: localStorage.getItem('isAuthenticated')\r\n}\r\n\r\n\r\n\r\nexport default function (state= initialState,action){\r\n    switch(action.type){\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n\r\n            console.log (action.payload)\r\n            localStorage.setItem('token', action.payload.accessToken)\r\n            localStorage.setItem('username', action.payload.username)\r\n            localStorage.setItem('isAuthenticated', action.payload.isAuthenticated)\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true                \r\n            }\r\n        case LOGIN_FAIL:\r\n        case REGISTER_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n            localStorage.removeItem('token')\r\n            return{\r\n                ...state,\r\n                accessToken:null,                \r\n                isAuthenticated: null,\r\n                username: null,\r\n                email: null,\r\n                roles: []\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}","import {GET_ESTADOS, ADD_ESTADO, EDIT_ESTADO, DELETE_ESTADO} from '../actions/estadosActions'\r\n\r\nconst initialState = {\r\n    lista:[]\r\n} \r\n\r\nexport default function(state=initialState, action){\r\n    switch (action.type) {\r\n        case GET_ESTADOS:\r\n                return {\r\n                    ...state,\r\n                    lista: action.payload\r\n                }\r\n            break;    \r\n\r\n            \r\n            case ADD_ESTADO:\r\n                return{\r\n                    ...state,\r\n                    lista: [...state.lista, action.payload]\r\n                }\r\n            case EDIT_ESTADO:                \r\n                return {\r\n                    ...state,\r\n                    lista: [...state.lista.filter(item=> item.id !== action.payload.id), action.payload]\r\n                }\r\n            case DELETE_ESTADO:\r\n                return{\r\n                    ...state,\r\n                    lista: state.lista.filter(item=>item.id !== action.payload)\r\n                }\r\n            \r\n            default:\r\n                return state     \r\n\r\n    }\r\n}","import {GET_MUNICIPIOS,ADD_MUNICIPIO,EDIT_MUNICIPIO,DELETE_MUNICIPIO } from '../actions/municipiosActions'\r\n\r\nconst initialState = {\r\n    lista:[],\r\n    mode: ''\r\n}\r\n\r\nexport default function(state=initialState, action){\r\n    switch(action.type){\r\n        case GET_MUNICIPIOS:\r\n            return{\r\n                ...state,\r\n                lista: action.payload\r\n            }\r\n        case ADD_MUNICIPIO:\r\n            return{\r\n                ...state,\r\n                lista: [...state.lista, action.payload]\r\n            }\r\n        case EDIT_MUNICIPIO:            \r\n            return {\r\n                ...state,\r\n                lista: [...state.lista.filter(item=> item.id !== action.payload.id), action.payload]\r\n            }\r\n        case DELETE_MUNICIPIO:\r\n            return{\r\n                ...state,\r\n                lista: state.lista.filter(item=>item.id !== action.payload)\r\n            }\r\n \r\n        \r\n        default:\r\n            return state        \r\n    }\r\n}","import {GET_CATEGORIAS,ADD_CATEGORIA,EDIT_CATEGORIA,DELETE_CATEGORIA  } from '../actions/categoriasActions'\r\n\r\nconst initialState = {\r\n    lista:[],    \r\n}\r\n\r\nexport default function(state=initialState, action){\r\n    switch(action.type){\r\n        case GET_CATEGORIAS:\r\n            return{\r\n                ...state,\r\n                lista: action.payload\r\n            }\r\n        case ADD_CATEGORIA:\r\n            return{\r\n                ...state,\r\n                lista: [...state.lista, action.payload]\r\n            }\r\n        case EDIT_CATEGORIA:\r\n            console.log (action.payload)\r\n            return {\r\n                ...state,\r\n                lista: [...state.lista.filter(item=> item.id !== action.payload.id), action.payload]\r\n            }\r\n        case DELETE_CATEGORIA:\r\n            return{\r\n                ...state,\r\n                lista: state.lista.filter(item=>item.id !== action.payload)\r\n            }\r\n    \r\n        \r\n            \r\n        default:\r\n            return state        \r\n    }\r\n}","import {GET_CLIENTES,ADD_CLIENTE,EDIT_CLIENTE,DELETE_CLIENTE, SET_CLIENTE_MODE, SET_CLIENTE_ID } from '../actions/clientesActions'\r\n\r\nconst initialState = {\r\n    lista:[],\r\n    mode: '',\r\n    idCliente: ''\r\n}\r\n\r\nexport default function(state=initialState, action){\r\n    switch(action.type){\r\n        case GET_CLIENTES:\r\n            return{\r\n                ...state,\r\n                lista: action.payload\r\n            }\r\n        case ADD_CLIENTE:\r\n            return{\r\n                ...state,\r\n                lista: [...state.lista, action.payload]\r\n            }\r\n        case EDIT_CLIENTE:\r\n            console.log (action.payload)\r\n            return {\r\n                ...state,\r\n                lista: [...state.lista.filter(item=> item.id !== action.payload.id), action.payload]\r\n            }\r\n        case DELETE_CLIENTE:\r\n            return{\r\n                ...state,\r\n                lista: state.lista.filter(item=>item.id !== action.payload)\r\n            }\r\n\r\n        case SET_CLIENTE_MODE:\r\n            return{\r\n                ...state,\r\n                mode: action.payload\r\n            }\r\n\r\n            \r\n        \r\n        case SET_CLIENTE_ID:\r\n            return{\r\n                ...state,\r\n                idCliente: action.payload\r\n            }\r\n        \r\n\r\n        default:\r\n            return state        \r\n    }\r\n}","import {GET_CLIENTE_DATOS_ENTREGAS,ADD_CLIENTE_DATOS_ENTREGA,EDIT_CLIENTE_DATOS_ENTREGA,DELETE_CLIENTE_DATOS_ENTREGA, SET_CLIENTE_DATOS_ENTREGA_MODE } from '../actions/clientesDatosEntregaActions'\r\n\r\nconst initialState = {\r\n    lista:[],\r\n    mode: ''\r\n}\r\n\r\nexport default function(state=initialState, action){\r\n    switch(action.type){\r\n        case GET_CLIENTE_DATOS_ENTREGAS:\r\n            return{\r\n                ...state,\r\n                lista: action.payload\r\n            }\r\n        case ADD_CLIENTE_DATOS_ENTREGA:\r\n            return{\r\n                ...state,\r\n                lista: [...state.lista, action.payload]\r\n            }\r\n        case EDIT_CLIENTE_DATOS_ENTREGA:\r\n            console.log (action.payload)\r\n            return {\r\n                ...state,\r\n                lista: [...state.lista.filter(item=> item.id !== action.payload.id), action.payload]\r\n            }\r\n        case DELETE_CLIENTE_DATOS_ENTREGA:\r\n            return{\r\n                ...state,\r\n                lista: state.lista.filter(item=>item.id !== action.payload)\r\n            }\r\n\r\n        case SET_CLIENTE_DATOS_ENTREGA_MODE:\r\n            return{\r\n                ...state,\r\n                mode: action.payload\r\n            }\r\n        \r\n        default:\r\n            return state        \r\n    }\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport auth from './auth'\r\nimport estados from './estadosReducers'\r\nimport municipios from './municipiosReducers'\r\nimport categorias from './categoriasReducers'\r\nimport clientes from './clientesReducers'\r\nimport datosEntrega from './clientesDatosEntregasReducers'\r\n\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    estados, \r\n    municipios,\r\n    categorias,\r\n    clientes,\r\n    datosEntrega,\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {Provider} from 'react-redux'\r\nimport rootReducer from './reducers/index'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore (\r\n  rootReducer, \r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Provider  store={store}>\r\n    <BrowserRouter>\r\n      <App />    \r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n","module.exports = {\r\n    address: 'http://localhost:8080/api/',\r\n    //resources: 'http://localhost:8080/resources/'\r\n}\r\n\r\n"],"sourceRoot":""}